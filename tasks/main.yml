---

#- name: Configure kernel parameters
#  sysctl:
#    name: "{{ item.key }}"
#    value: "{{ item.value }}"
#    sysctl_set: True
#    state: present
#    reload: True
#  with_dict:
#    vm.max_map_count: '262144'
#  register: kernel_params
#  tags:
#    - configuration
#    - system
#    - kernel
#
- name: Create elasticsearch directories
  file:
    state: directory
    path: "{{ item }}"
    recurse: False 
  with_items:
    - "{{ elasticsearch_config_dir }}"
    - "{{ elasticsearch_data_dir }}"
    - "{{ elasticsearch_certificate_dir }}"
    - "{{ elasticsearch_snapshot_dir_host }}"
  register: dir_create
  tags:
    - configuration
    - files

#- name: Copy SSL certificates
#  copy:
#    src: "{{ elasticsearch_certificate_local_dir }}/"
#    dest: "{{ elasticsearch_certificate_dir }}/"
#  register: copy_certs
#  tags:
#    - configuration
#    - files
#    - certificates

- name: Copy elasticsearch configuration
  template:
    src: elasticsearch.j2
    dest: "{{ elasticsearch_config_dir }}/elasticsearch.yml"
  register: es_config
  tags:
    - configuration
    - files

- name: Remove elasticsearch keystore
  file:
    path: "{{ elasticsearch_config_dir }}/elasticsearch.keystore"
    state: absent
  when: elasticsearch_force_keystore_create | bool
  tags:
    - configuration
    - files
    - keystore

- import_tasks: vm/main.yml

#- import_tasks: docker/main.yml

- name: Wait for elasticsearch port to be opened
  wait_for:
    state: started
    host: "{{ elasticsearch_network_address | default(ansible_default_ipv4) }}"
    port: "{{ elasticsearch_network_port }}"
    delay: 1
    timeout: 120
  tags:
    - deploy

- name: Check elasticsearch cluster status
  uri: 
    method: GET
    url_username: elastic
    url_password: "{{ secrets.elasticsearch.bootstrap.password }}"
    url: "{% if elasticsearch_security_http_enabled %}https{% else %}http{% endif %}://{{ elasticsearch_network_address }}:{{ elasticsearch_network_port }}/_cluster/health"
    remote_src: True
    return_content: True
    validate_certs: False
    body_format: json
  register: cluster_check
  until: cluster_check.status in [ 200 ] and cluster_check.json.status == "green"
  delay: 15 
  retries: 5
  when: elasticsearch_cluster_check
  tags:
    - deploy
